version: '2.1'
services:
  crontab:
    image: willfarrell/crontab
    depends_on:
      - phpfpm
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "${PROJ_DIR:-..}/docker/cron/crontab.dist.json:/opt/crontab/config.json:rw"
    environment:
      LOG_FILE: /dev/stdout

  phpfpm:
    build:
      context: ./php/fpm
    image: opensalt/php:7.4-fpm_${DATABASE_DRIVER}
    #image: opensalt/php:7.4-fpm-xdebug
    depends_on:
      - db
    environment:
      #XDEBUG_CONFIG: remote_host=Your_IP_Address
      DATABASE_BRAND:
      DATABASE_DRIVER:
      DATABASE_FILTER:
      DATABASE_HOST:
      DATABASE_PORT:
      DATABASE_NAME:
      DATABASE_USER:
      DATABASE_PASSWORD:
      DATABASE_CHARSET:
      DATABASE_VERSION:
      DB_USE_RDS_CERT:
      APP_SECRET:
      COOKIE_SECRET:
      GITHUB_CLIENT_ID:
      GITHUB_CLIENT_SECRET:
      BRAND_LOGO_URL:
      BRAND_LOGO_STYLE:
      BRAND_LINK_URL:
      BRAND_LINK_STYLE:
      FOOTER_LEFT_TEXT:
      ALLOW_LOCAL_DEV: "true"
      ALLOW_EXTERNAL_DEV_IPS:
      DEV_COOKIE:
      FIREBASE_API_KEY:
      FIREBASE_AUTH_DOMAIN:
      FIREBASE_DB_URL:
      FIREBASE_PROJECT_ID:
      FIREBASE_CLIENT_ID:
      FIREBASE_CLIENT_EMAIL:
      FIREBASE_PRIVATE_KEY:
      FIREBASE_PREFIX:
      MAILER_TRANSPORT:
      MAILER_HOST:
      MAILER_USER:
      MAILER_PASSWORD:
      MAILER_AUTH_MODE:
      MAILER_PORT:
      COMMENTS_FEATURE:
      COMMENT_ATTACHMENTS:
      CREATE_ACCOUNT_FEATURE:
      USE_MAIL_FEATURE:
      MAIL_FEATURE_FROM_EMAIL:
      GOOGLE_CAPTCHA_SITE_KEY:
      GOOGLE_CAPTCHA_SECRET_KEY:
      AWS_ACCESS_KEY_ID:
      AWS_SECRET_ACCESS_KEY:
      AWS_S3_BUCKET:
      AWS_S3_REGION:
      AWS_S3_PREFIX:
      ATTACHMENT_URL_PREFIX:
      BUCKET_PROVIDER:
      LOCAL_FILESYSTEM_PATH:
      CASE_NETWORK_CLIENT_ID:
      CASE_NETWORK_CLIENT_SECRET:
      CASE_NETWORK_TOKEN_ENDPOINT:
      CASE_NETWORK_SCOPE:
    volumes:
      - &project_root "${PROJ_DIR:-..}:/var/www/html"
    working_dir: /var/www/html

  nginx:
    #build:
    #  context: ./nginx
    image: opensalt/nginx:1.16-alpine
    depends_on:
      - phpfpm
    environment:
      UPSTREAM_HOST: phpfpm:9000
    ports:
      - "${PORT:-3000}:80"
    volumes:
      - *project_root
    working_dir: /var/www/html
    networks:
      default:
      external:
        aliases:
          - "${COMPOSE_PROJECT_NAME}-salt"

  db:
    build:
      context: ./${CONTAINER_REPO}
    image: opensalt/db:${CONTAINER_REPO}_${DATABASE_VERSION}
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    volumes:
      - "${PROJ_DIR:-..}/docker/data/mysql:/var/lib/mysql"
      - "${PROJ_DIR:-..}/docker/mysql/max_allowed_packet.cnf:/etc/mysql/conf.d/max_allowed_packet.cnf:ro"
      - "${PROJ_DIR:-..}/docker/mysql/charset.cnf:/etc/mysql/conf.d/charset.cnf:ro"
      - "${PROJ_DIR:-..}/var/lib/postgresql:/var/lib/postgresql/data"
    environment:
      MYSQL_DATABASE: "${DATABASE_NAME}"
      MYSQL_USER: "${DATABASE_USER}"
      MYSQL_PASSWORD: "${DATABASE_PASSWORD}"
      MYSQL_HOST: "${DATABASE_HOST}"
      MYSQL_ROOT_PASSWORD: "${DATABASE_PASSWORD}"
      POSTGRES_USER:
      POSTGRES_PASSWORD:
      POSTGRES_DB:
  #neo4j:
  #elasticsearch:
#volumes:
#  mysql-data: {}
networks:
  external:
